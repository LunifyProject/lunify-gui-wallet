name: Build and Release Electron App

on:
  push:
    paths-ignore:
      - '**/BUILDING.yml'
      - '**/README.md'
  pull_request:
    paths-ignore:
      - '**/BUILDING.yml'
      - '**/README.md'
  workflow_dispatch:
    inputs:
      run_release:
        description: 'Release the Artifacts'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      version_number:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

env:
  USE_HARD_LINKS: false

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Python linking
        if: matrix.os == 'macos-latest'
        run: |
          brew install python@3.9  # Install Python 3
          sudo ln -s /opt/homebrew/bin/python3 /usr/bin/python  # Create symbolic link to make Python accessible as `/usr/bin/python`
          sudo ln -s /opt/homebrew/bin/pip3 /usr/bin/pip  # Link pip3 to `/usr/bin/pip`
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Build for ${{ matrix.os }}
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Package Electron App
        run: npx electron-builder --${{ matrix.os == 'windows-latest' && 'win' || matrix.os == 'macos-latest' && 'mac' || 'linux' }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Lunify-Wallet-${{ matrix.os }}
          path: dist/electron/Packaged/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: releases/
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: releases/**/*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          body: "ðŸš€ New release for Lunify Wallet!"
